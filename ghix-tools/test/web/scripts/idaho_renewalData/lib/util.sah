_resource("/opt/sahi/useraccounts.xls");

var $isConnecticut = isConnecticut();
var $isIdaho = isIdaho();

function getBaseURL() {
	return _suiteInfo()["baseURL"];
}

function getBaseDomain(){
	return _suiteInfo()["baseURL"].split("/")[2];
}

function getApplicationLanguage(){
	return _suiteInfo()["language"];
}

function isProductionEnvironment(){
	var $domain = getBaseDomain();
	return $domain == "idahohix.yourhealthidaho.org" || $domain == "id2auto.ghixqa.com" || $domain == "id2qa.ghixqa.com";
}

function isCTProductionEnvironment(){
	var $domain = getBaseDomain();
	return $domain == "cds.accesshealthct.com";
}

function isConnecticut(){
	return _suiteInfo()["state"] == "CT";
}

function isIdaho(){
	return _suiteInfo()["state"] == "ID";
}

function getRandomInt($min, $max) {
  $min = Math.ceil($min);
  $max = Math.floor($max);
  return Math.floor(Math.random() * ($max - $min)) + $min; //The maximum is exclusive and the minimum is inclusive
}

function getUserAccountsFilePath(){
	return "../../opt/sahi/useraccounts.xls";
}

function isTrue($value){
	return $value === "Y" || $value === "TRUE";
}

function takePageScreenShot(){
	_lockWindow();
	_focusWindow();
	_wait(1000);
	_takePageScreenShot();
	_wait(1000);
	_unlockWindow();
}

function encodeForRegEx($string){
	return $string
		.replace(/\(/g, "[(]")
		.replace(/\)/g, "[)]")
		.replace(/\?/g, "[?]")
		.replace(/\’/g, "[’]")
		.replace(/\//g, "[/]");
}

function convertMoneyToNumber($money){
	$money = $money.replace("$", "");
	return parseFloat($money);
}

function maximizeWindow(){
	_windowAction("maximize"); // mazimize window.
}

function toTitleCase($str){
	$str = $str.toLowerCase().split(' ');
	for (var $i = 0; $i < $str.length; $i++) {
		$str[$i] = $str[$i].charAt(0).toUpperCase() + $str[$i].slice(1);
	}
	$str= $str.join(' ');
	return $str;
}



function getNumberOfPlansOnPage(){
	var $plans = _collect("_span", "cp-tile__premium-amount", _in(_div("mainSummary")));
	return $plans.length;
}

function randomFirstName(){

	var $firstNamesArray = ["Jackson", "Aiden", "Liam", "Lucas", "Noah", "Mason", "Jayden", "Ethan", "Jacob", "Jack", "Caden", "Logan", "Benjamin", "Michael", "Caleb", "Ryan", "Alexander", "Elijah", "James", "William", "Oliver", "Connor", "Matthew", "Daniel", "Luke", "Brayden", "Jayce", "Henry", "Carter", "Dylan", "Gabriel", "Joshua", "Nicholas", "Isaac", "Owen", "Nathan", "Grayson", "Elise", "Landon", "Andrew", "Maxim", "Samuel", "Gavin", "Wyatt", "Christian", "Hunter", "Cameron", "Evan", "Charlie", "David", "Sebastian", "Joseph", "Dominic", "Anthony", "Colton", "John", "Tyler", "Zachary", "Thomas", "Julian", "Levi", "Adam", "Isaiah", "Alex", "Aaron", "Parker", "Cooper", "Miles", "Chase", "Muhammad", "Christopher", "Blake", "Austin", "Jordan", "Leon", "Jonathan", "Adrian", "Colin", "Hudson", "Ianic", "Xavier", "Camden", "Tristan", "Carson", "Jason", "Nolan", "Riley", "Lincoln", "Brody", "Bentley", "Nathaniel", "Josiah", "Declan", "Jake", "Asher", "Jeremiah", "Cole", "Mateo", "Micah", "Elliot","Sophia", "Emma", "Olivia", "Isabella", "Miaa", "Avaa", "Lily", "Zoee", "Emily", "Chloe", "Layla", "Madison", "Madelyn", "Abigail", "Aubrey", "Charlotte", "Amelia", "Ella", "Kaylee", "Avery", "Aaliyah", "Hailey", "Hannah", "Addison", "Riley", "Harper", "Aria", "Ariannah", "Mackenzie", "Lila", "Evelyn", "Adalyn", "Grace", "Brooklyn", "Ellie", "Hanna", "Kaitlyn", "Isabelle", "Sophie", "Scarlett", "Natalie", "Leah", "Sarah", "Nora", "Mila", "Elizabeth", "Lillian", "Kylie", "Audrey", "Lucy", "Maya", "Annabelle", "Makayla", "Gabriella", "Elena", "Victoria", "Claire", "Savannah", "Peyton", "Maria", "Alaina", "Kennedy", "Stella", "Liliana", "Allison", "Samantha", "Keira", "Alyssa", "Reagan", "Molly", "Alexandra", "Violet", "Charlie", "Julia", "Sadie", "Ruby", "Evali", "Alice", "Eliana", "Taylor", "Callie", "Penelope", "Camilla", "Bailey", "Kaelyn", "Alexis", "Kayla", "Katherine", "Sydney", "Lauren", "Jasmine", "London", "Bella", "Adeline", "Caroline", "Vivian", "Juliana", "Gianna", "Skyler", "Jordyn"];
	var $randomNum = _random($firstNamesArray.length);
	if($randomNum == $firstNamesArray.length){
		$randomNum = 0;
	}
	return $firstNamesArray[$randomNum];
}


function randomLastName(){

	var $lastNameArray = ["Anderson", "Ashwoon", "Aikin", "Bateman", "Bongard", "Bowers", "Boyd", "Cannon", "Cast", "Deitz", "Dewalt", "Ebner", "Frick", "Hancock", "Haworth", "Hesch", "Hoffman", "Kassing", "Knutson", "Lawless", "Lawicki", "Mccord", "McCormack", "Miller", "Myers", "Nugent", "Ortiz", "Orwig", "Oryg", "Paiser", "Paki", "Pettigrew", "Quinn", "Quizoz", "Ramachandran", "Resnick", "Sagar", "Schickowski", "Schiebel", "Sellon", "Severson", "Shaffer", "Solberg", "Soloman", "Sonderling", "Soukup", "Soulis", "Stahl", "Sweeney", "Tandy", "Trebil", "Trusela", "Trussel", "Turco", "Uddin", "Uflan", "Ulrich", "Upson", "Vader", "Vail", "Valente", "Vanzandt", "Vanderpoel", "Ventotla", "Vogal", "Wagle", "Wagner", "Wakefield", "Weinstein", "Weiss", "Woow", "Yang", "Yates", "Yocum", "Zeaser", "Zeller", "Ziegler", "Bauer", "Baxster", "Casal", "Cataldi", "Caswell", "Celedon", "Chambers", "Chapman", "Christensen", "Darnell", "Davidson", "Davis", "DeLorenzo", "Dinkins", "Doran", "Dugelman", "Dugan", "Duffman", "Eastman", "Ferro", "Ferry", "Fletcher", "Fietzer", "Hylan", "Hydinger", "Illingsworth", "Ingram", "Irwin", "Jagtap", "Jenson", "Johnson", "Johnsen", "Jones", "Jurgenson", "Kalleg", "Kaskel", "Keller", "Leisinger", "LePage", "Lewis", "Linde", "Lulloff", "Maki", "Martin", "McGinnis", "Mills", "Moody", "Moore", "Napier", "Nelson", "Norquist", "Nuttle", "Olson", "Ostrander", "Reamer", "Reardon", "Reyes", "Rice", "Ripka", "Roberts", "Rogers", "Root", "Sandstrom", "Sawyer", "Schlicht", "Schmitt", "Schwager", "Schutz", "Schuster", "Tapia", "Thompson", "Tiernan", "Tisler" ]
	var $randomNum = _random($lastNameArray.length);
	if($randomNum == $lastNameArray.length){
		$randomNum = 0;
	}
	return $lastNameArray[$randomNum];

}


function getQualifyingDate($pastDate,$format){
	var $eventDate ="";
	var $currentMonth = _fetch(window.moment().get('month')) + 1;
	_log($currentMonth);
	_log($format);
	if($pastDate == "10days"){
		if($currentMonth == 1) {
			$eventDate = "01/01/"+ _fetch(window.moment().get('year'));
		}else{
			$eventDate = _call(window.moment().subtract(10, 'd'));
		}
	}else if($pastDate == "currentDate"){
		$eventDate = _call(window.moment());
	}else if($pastDate.indexOf("future") != -1){
		var $daysInFuture = _extract($pastDate, "/(.*)_days_future/", true).toString();
		$eventDate = _call(window.moment().add(parseInt($daysInFuture), 'd'));
	}
	_log("log($format): "+$format);
	var $date = _fetch(window.moment($eventDate).format($format));
	_log($date);
	
	return $date;
	
}

