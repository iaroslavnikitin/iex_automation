_includeOnce("Login.sah");
_includeOnce("../lib/common.sah");
_includeOnce("../lib/util.sah");
_includeOnce("ManageMember.sah");

var $firstName, $lastName, $email, $phoneNumber, $dob, $county = 1, $zipCode = "17025";


var $userAddUserPageHeading = _heading4("Enter User Information");
var $userAddUserPageNewUserHeading = _heading1("Add New User");
var $userAddUserPageLeftNavLink = _div("/Accounts Add User Manage User/");
var $userAddUserPageSelectRole = _select("role");
var $userAddUserPageFirstName = _textbox("firstName");
var $userAddUserPageLastName = _textbox("Last NameRequired");
var $userAddUserPageEmail = _textbox("EmailRequired");
var $userAddUserPagePhoneOne = _textbox("phone1") 
var $userAddUserPagePhoneTwo = _textbox("phone2")
var $userAddUserPagePhoneThree = _textbox("phone3")
var $userAddUserPageCancel = _link("Cancel")
var $userAddUserPageSaveAndSendEmail = _button("Save and Send Email");

var $userAddUserPageAccessors = [$userAddUserPageHeading, $userAddUserPageNewUserHeading,$userAddUserPageLeftNavLink,$userAddUserPageSelectRole,$userAddUserPageFirstName,
$userAddUserPageLastName,$userAddUserPageEmail,$userAddUserPagePhoneOne, $userAddUserPagePhoneTwo,$userAddUserPagePhoneThree, $userAddUserPageCancel, $userAddUserPageSaveAndSendEmail];

function csrManageUserVerify($permission){
	if($permission == "Y"){
		_assertVisible(_link("Users", _in(_div("menu"))));
		_click(_link("Users", _in(_div("menu"))));
		_assertVisible(_link("Add User", _near(_link("Users"))));
		_assertVisible(_link("Manage User", _near(_link("Users"))));
		_click(_link("Manage User", _near(_link("Users"))));
//		_assertEqual("Any,Counselor,Agent,Entity,Individual",_getOptions(_select("userType")));
		var $options = _getOptions(_select("userType"));
		_assert($options.indexOf("Any") != -1, "Option 'Any' is not present");
		_assert($options.indexOf("Counselor") != -1, "Option 'Counselor' is not present");
		_assert($options.indexOf("Agent") != -1, "Option 'Agent' is not present");
		_assert($options.indexOf("Entity") != -1, "Option 'Entity' is not present");
		_assert($options.indexOf("Individual") != -1, "Option 'Individual' is not present");
		
		//Check if its a supervisor
		if ((_isVisible(_link("Reports"))) && (_isVisible(_link("Enrollment")))){
			_assertEqual("9", _getOptions(_select("userType")).length);
			}
		else {	
		_assertEqual("5", _getOptions(_select("userType")).length);
		}
	}
	else {
		_assertNotVisible(_link("Users", _in(_div("menu"))));
	}
}

function csrAddIndividual(){
	_click(_link("Users", _in(_div("menu"))));
	_click(_link("Add User", _near(_link("Users"))));
	_assertEqual("Please select a Role,Individual",_getText(_click(_select("role"))));
	_assertEqual("2",_getText(_select("role")).length);
	_setSelected(_select("role"), "Individual");
}

function csrCreateAndManageIndividual($user,$password,$permission,$SSNRequired, $userFirstName, $userLastName, $role){
	
	clickLogin();
	loginEnterEmailAddress($user);
	loginEnterPassword($password);
	loginClickLoginButton();
	manageTicketVerify();
	csrManageUserVerify($permission);
	csrAddIndividual();
	csrCreatingIndividual("","","10/10/1988","83702","","",$SSNRequired);
	_click(_link("My Account"));
	clickManageMember();
	_setValue(_textbox("householdEmail"), $signupEmail);
	_click(_submit("Go"));
	_assertTrue(_isVisible(_cell(1, _in(_table("table table-striped jsMemberSearchResultTable")))));
	_click(_link(0, _in(_cell(2))));
	//Verify Basic Information for Individual
	csrVerifyIndividualBasicInfo($firstName, $lastName, $signupEmail, $SSNRequired);
	//Verify History
	csrVerifyIndividualHistory($SSNRequired,$userFirstName, $userLastName, $role);
	//Edit Basic Information for Individual and verify history
	csrEditIndividualBasicInfoAndVerifyHistory($SSNRequired, $userFirstName, $userLastName, $role);
	_click(_link("Send Account Activation Email", _in(_div("sidebar"))));
	_assertVisible(_heading4("Send activation email ?"));
	_click(_submit("Send"));
	logOut();
	getActivationlink();
	//Date of Birth is hardcoded to 10 October, 1988
	clickSubmitOnSignUpPage($signupEmail,$firstName,$lastName,"10/10/1988","", $SSNRequired);
	clickContinueOnCommunicationPreference("417 S 6th St", "", "Boise", "Idaho","83702");
	verifyElementsOfIndividualDashboard();
	logOut();
	loginEnterEmailAddress($user);
	loginEnterPassword($password);
	loginClickLoginButton();
	manageTicketVerify();
	csrManageUserVerify($permission);
	_setValue(_textbox("userName"), $signupEmail);
	_click(_submit("submit"));
	var $status =	_getText(_cell("user_Status", _in(_table("userlistTbl"))));
	_click(_link("/"+$signupEmail+"/i", _in(_table("userlistTbl"))));
	_assertVisible(_submit("Save and Send"));
	_setSelected(_select("status"), "Inactive");
	_click(_submit("Save and Send"));
	_setValue(_textbox("userName"), $signupEmail);
	_click(_submit("submit"));
	_assertNotEqual($status, _getText(_cell("user_Status", _in(_table("userlistTbl")))));
	$status =  _getText(_cell("user_Status", _in(_table("userlistTbl"))));
	_click(_link("/"+$signupEmail+"/i", _in(_table("userlistTbl"))));
	_assertVisible(_submit("Save and Send"));
	_setSelected(_select("status"), "Active");
	_click(_submit("Save and Send"));
	_setValue(_textbox("userName"), $signupEmail);
	_click(_submit("submit"));
	_assertNotEqual($status, _getText(_cell("user_Status", _in(_table("userlistTbl")))));
	logOut();
}

//Verify Basic Information of Individual
function csrVerifyIndividualBasicInfo($firstName, $lastName, $signupEmail, $SSNRequired){
	$firstName=toTitleCase($firstName);
	$lastName=toTitleCase($lastName);
	_assertVisible(_cell($firstName+" "+$lastName, _near(_cell("Name:"))),"First name and Last Name is not visible in Basic Information");
	_assertEqual($firstName.toLowerCase()+" "+$lastName.toLowerCase(),_getText(_cell(0, _rightOf(_cell("Name:")))).toLowerCase(), "First name and last name in Basic Information is not the same as given during individual record creation");
	_assertVisible(_cell($signupEmail.toLowerCase(), _near(_cell("Email Address:"))),"Email Address is not visible in Basic Information");
	_assertEqual($signupEmail.toLowerCase(),_getText(_cell(0, _rightOf(_cell("Email Address:")))).toLowerCase(),"Email in Basic Information is not the same as given during individual record creation");
	_assertVisible(_cell($indvidualPhoneNumber, _near(_cell("Phone Number:"))),"Phone Number is not visible in Basic Information");
	_assertEqual($indvidualPhoneNumber,_getText(_cell(0, _rightOf(_cell("Phone Number:")))),"Phone number is not the same as given during individual record creation");
	_assertVisible(_button("Marked As Verified", _rightOf(_cell("Remote Identity Verification Status:"))),"Marked As Verified button is not visible");
	_assertVisible(_button("Convert to Manual Document Verification", _rightOf(_cell("Remote Identity Verification Status:"))),"Convert to Manual Document Verification button is not visible");
	_assertVisible(_cell(0, _rightOf(_cell("Access Code:"))),"Access Code label is not visible in Basic Information");
	_assertVisible(_strong("No Financial Applications found.", _near(_cell("Access Code:"))),"No Financial Applications found is not visible next to Access Code");
	_assertEqual("No Financial Applications found.",_getText(_cell(0, _rightOf(_cell("Access Code:")))), "No Financial Applications found is not displayed next to Access Code");
 	_assertVisible(_cell("SSN:"),"SSN label is not displayed");
	if($SSNRequired == "Y"){
		_assertVisible(_cell("Not Provided"),"Not Provided is not visible next to SSN label");
		_assertEqual("Not Provided", _getText(_cell("Not Provided")), "SSN: Not Provided is not displayed under Basic Information");
	} 
	else{
		_assertVisible(_cell("SSN is not required ("+$ssnNotReqdReason+")", _rightOf(_cell("SSN:"))),"Selected SSN not required reason is not displayed");
			}
}

function csrVerifyIndividualHistory($SSNRequired, $userFirstName, $userLastName, $role){
	expandCSROverridesSSNOverride($userFirstName, $userLastName, $role);
	if($SSNRequired == "Y"){
		_assertVisible(_div("SSN Required", _rightOf(_div("Current Value"))),"SSN Required is not displayed next to Current value");
	}
	else {
		_assertVisible(_div("SSN Not Required ("+$ssnNotReqdReason+")", _rightOf(_div("Current Value"))),"Selected SSN Not Required reason is not displayed next to Current Value");
	}
	_assertVisible(_div("NA", _rightOf(_div("Previous Value"))),"NA is not displayed next to Previous Value");
	_assertVisible(_div("CAP Individual Profile Page",  _rightOf(_div("Source"))),"CAP Individual Profile Page is not displayed next to Source");
	_click(_link("Show Comments"));
	_assertVisible(_italic("No Comments", _rightOf(_div("Comments"))),"No Comments is not displayed next to Comments");
}

function expandCSROverridesSSNOverride($userFirstName, $userLastName, $role){
	_assertVisible(_link("History"),"History link is not displayed");
	_click(_link("History"));
	_assertVisible(_span("CSR Overrides - SSN Override", _in(_div("row-fluid boxcontainer"))),"CSR Overrides - SSN Override is not displayed");
	_assertVisible(_submit("btn",_near(_span("CSR Overrides - SSN Override"))), "Button to expand selected row in History is not displayed");
	_click(_submit("btn", _near(_span("CSR Overrides - SSN Override"))));
	_assertEqual("/by "+$userFirstName.toLowerCase()+" "+$userLastName.toLowerCase()+"/",_getText(_div("row-fluid ")).toLowerCase(), "CSR Overrides - SSN Override operation is not performed by logged in user");
	_assertEqual("/"+$role.toLowerCase()+"/", _getText(_div("row-fluid ")).toLowerCase(),"User role is not displayed in CSR Overrides - SSN Override row");
}
	

function csrEditIndividualBasicInfoAndVerifyHistory($SSNRequired, $userFirstName, $userLastName, $role){
	_click(_link("Basic Information"));
	_click(_link("Edit"));
	if($SSNRequired == "Y"){
		//Verify if SSN is requried radio button is selected
		_assert(_radio("ssnRequiredYes").checked,"SSN required radio button is not displayed");
		//Change to SSN is Required option
		verifyClickSSNNotRequiredReason();
		generateSetRandomSSNNotReqdReason();
		_click(_submit("Save"));
		$SSNRequired = "N";
		//Verify if changes made are saved in Basic Information page
		_assertVisible(_cell("SSN is not required ("+$ssnNotReqdReason+")", _rightOf(_cell("SSN:"))),"Selected SSN is not required reason is not displayed next to SSN");
		//Verify History
		expandCSROverridesSSNOverride($userFirstName, $userLastName, $role);
		_assertVisible(_div("SSN Not Required ("+$ssnNotReqdReason+")", _rightOf(_div("Current Value"))),"Selected SSN is not required reason is not displayed next to Current Value");	
		_assertVisible(_div("SSN Required", _rightOf(_div("Previous Value"))),"SSN Required is not displayed next to Previous Value");
		//Change it back to SSN is required
		_click(_link("Basic Information"));
		_click(_link("Edit"));
		_click(_radio("ssnRequiredYes"));
		_click(_submit("Save"));
		_assertEqual("Not Provided", _getText(_cell("Not Provided")), "SSN: Not Provided is not displayed under Basic Information");
		$SSNRequired = "Y";
	}
	else {
		verifyClickSSNNotRequiredReason();
		//Generate new random SSN Not Required reason
			do{	
				var $randomNumber = getRandomInt(1, 5);
				} while ($SSNNotReqdReasons[$randomNumber] == $ssnNotReqdReason);
		_setSelected(_select("ssnNotReqdReasons"), $SSNNotReqdReasons[$randomNumber] );
		var $newSSNNotReqdReason = _getSelectedText(_select("ssnNotReqdReasons"));	
		_click(_submit("Save"));
		//Verify if changes made are saved in Basic Information page
		_assertVisible(_cell("SSN is not required ("+$newSSNNotReqdReason+")", _rightOf(_cell("SSN:"))),"Newly selected SSN is not required reason next to SSN ");
		//Verify History
		expandCSROverridesSSNOverride($userFirstName, $userLastName, $role);
		_assertVisible(_div("SSN Not Required ("+$newSSNNotReqdReason+")", _rightOf(_div("Current Value"))),"Newly selected SSN is not required reason is not displayed next to Current Value");	
		_assertVisible(_div("SSN Not Required ("+$ssnNotReqdReason+")", _rightOf(_div("Previous Value"))),"Previous SSN is not required reason is not displayed next to Previous Value");
		$ssnNotReqdReason=$newSSNNotReqdReason;
	}
}

function csrModifyAgentAccount($user,$password,$permission,$agentLogin){
	clickLogin();
	loginEnterEmailAddress($user);
	loginEnterPassword($password);
	loginClickLoginButton();
	manageTicketVerify();
	csrManageUserVerify($permission);
//	csrManageUserVerify();
	_setValue(_textbox("userName"), $agentLogin);
	_click(_submit("submit"));
	var $status = _getText(_cell("user_Status", _in(_table("userlistTbl"))));
	_click(_link("/"+$agentLogin+"/i", _in(_table("userlistTbl"))));
	_assertVisible(_submit("Save and Send"));
	_setSelected(_select("status"), "Inactive");
	_click(_submit("Save and Send"));
	_setValue(_textbox("userName"), $agentLogin);
	_click(_submit("submit"));
	_assertNotEqual($status,_getText(_cell("user_Status", _in(_table("userlistTbl")))));
	var $status = _getText(_cell("user_Status", _in(_table("userlistTbl"))));
	_click(_link("/"+$agentLogin+"/i", _in(_table("userlistTbl"))));
	_assertVisible(_submit("Save and Send"));
	_setSelected(_select("status"), "Active");
	_click(_submit("Save and Send"));
	_setValue(_textbox("userName"), $agentLogin);
	_click(_submit("submit"));
	_assertNotEqual($status,_getText(_cell("user_Status", _in(_table("userlistTbl")))));
	logOut();
}

function csrUpdatingIndividualAccountStatusToInActive(){
	clickLogin();
	$url = getUpdatedBaseURL("").split("/");
	var $userDataPath = _userDataDir();

	//if ($url[2] !="idahohix.yourhealthidaho.org"){
	if (isProductionEnvironment()) {
		var $ExcelPath = "../opt/sahi/useraccounts.xls";
//		$data= getAccountDetails($ExcelPath,"Admin") ;
		$data= getAccountDetails("Admin") ;
		loginEnterEmailAddress($data["Email"]);
		_maskLogs("Sensitive Data");
		loginEnterPassword($data["Password"]);
		_unmaskLogs("Information end");
	}
	else {
		loginEnterEmailAddress("gismoketest_admin@getinsured.com");
		//	_maskLogs("Sensitive Data");
		loginEnterPassword("ghix123#");
		//	_unmaskLogs("Information end");
	}
	loginClickLoginButton();
	_click(_link("Users", _in(_div("menu"))));
	_click(_link("/Manage User/", _near(_link("Users"))));
	_setValue(_textbox("User Name"), $signupEmail);
	_click(_submit("Go"));

	//if ($url[2] !="idahohix.yourhealthidaho.org"){
	if (isProductionEnvironment()) {
		if($signupEmail =="" || $signupEmail ==null){
			_log("Stopping test case here as signupEmail is Empty");
			_stop();
		}
	}
	_assertVisible(_link($signupEmail));
	_assertEqual("Manage User 1 Total Users", _getText(_heading1("skip")));

	var $status =	_getText(_cell("user_Status", _in(_table("userlistTbl"))));
	_click(_link("dropdown", _rightOf(_cell($signupEmail)), _in(_table("userlistTbl"))));
	_click(_link("Edit End of dropdown", _in(_table("userlistTbl"))));
	_setSelected(_select("status"), "Inactive");
	_click(_submit("submit"));
	_setValue(_textbox("User Name"), $signupEmail);
	_click(_submit("Go"));
	_assertNotEqual($status, _getText(_cell("user_Status", _in(_table("userlistTbl")))));
	logOut();
}

function createNewUser($communicationPreference) {
	var $email = signUpUser("1", "ghix123#");
	if (_isVisible(_paragraph("/Please click CONTINUE to log in with your email address and password/"))) {
		_click(_link("Continue"));
		login($email, "ghix123#");
	}
	fillPersonalDetails("4510 Marketplace Way","","Enola","Pennsylvania",$communicationPreference,"","English","English");
	logOut();
	return $email;
}

function signUpUserAndLogin(){
	var $email = signUpUser("1", "ghix123#");
	if (_isVisible(_paragraph("/Please click CONTINUE to log in with your email address and password/"))) {
		_click(_link("Continue"));
		login($email, "ghix123#");
	}
	return $email;
}

function login($user, $password) {
	if (!$user) {
		$user = $signupEmail;
	}
	loginEnterEmailAddress($user);
	loginEnterPassword($password);
	loginClickLoginButton();
	if(_isVisible(_heading3("Find Help Near You")))
		_click(_link("Don't ask again"));
}

function signUpUser($securityAnswer, $password,$dateOfBirth){
	_click(_link("START SHOPPINGIndividual"));
	_click(_link("Skip and Sign up"));
	$firstName = randomFirstName()//randomString($FIELD_LENGTH);
	_setValue(_textbox("/First Name/"), $firstName);
	$lastName = randomLastName()//randomString($FIELD_LENGTH);
	_setValue(_textbox("/Last Name/"), $lastName);
	var $currentTime = new Date().getTime();
	$email = $firstName.toLowerCase()+"_"+$currentTime+"@yopmail.com";
	
	//$email = "Sahi_" + $firstName + $lastName + "@yopmail.com";
	//$email = $email.toLowerCase();
	_setValue(_emailbox("email"), $email);
	_setValue(_emailbox("confirmEmail"), $email);
	$phoneNumber = phoneGen();
	_setValue(_textbox("phone1"), $phoneNumber[0]);
	_setValue(_textbox("phone2"), $phoneNumber[1]);
	_setValue(_textbox("phone3"), $phoneNumber[2]);
	_setSelected(_select("securityQuestion1"), 1);
	_setValue(_textbox("Security Answer"), $securityAnswer);
	_setValue(_password("password"), $password);
	_setValue(_password("confirmPassword"), $password);
	var $SSN = getRandomSSN();
	
	
	var $s=$SSN.split("-");
	_setValue(_password("ssn1"), $s[0]);
	_setValue(_password("ssn2"), $s[1]);
	_setValue(_textbox("ssn3"), $s[2]);	
		
	_setValue(_password("confirmSsn1"), $s[0]);
	_setValue(_password("confirmSsn2"), $s[1]);
	_setValue(_textbox("confirmSsn3"), $s[2]);
	

	if(!$dateOfBirth){
		$dob = getRandomDateOfBirth();
		}
	_setValue(_textbox("birthDate"), $dob);

	_check(_checkbox("terms"));
	_click(_button("Submit"));
	return $email;
}

function verifyNotificationPreferenceMessage(){
	_assertVisible(_div("You will receive notifications based on your preferred method of communication, and each notification will be preceded by an email alert if applicable. As required by law, 1095-A tax statements are mailed via the U.S. Postal Service, and will also be distributed to your secure inbox."));
}

function createEmailAddress(){
	$tempFirstName = randomString($FIELD_LENGTH);
	$tempLastName = randomString($FIELD_LENGTH);
	return "Sahi_" + $tempFirstName + $tempLastName + "@yopmail.com";
}

function fillPersonalDetails($addr1, $addr2, $city, $state,$communicationPreference,$chekforAddress,$prefspokenLang,$prefwrittenLang, $SSN){
	_setValue($preferencesAddress1, $addr1);
	_setValue($preferencesAddress2, $addr2);
	_setValue($preferencesCity, $city);
	_setSelected($preferencesState, $state);
	_setValue($preferencesZipCode, $zipCode);
	_setSelected($preferencesCounty, $county);
	if (_isVisible($preferencesDob)) {
	//	var $dob = getRandomDateOfBirth();
		_setValue($preferencesDob, $dob);
	}
		
	if(!$prefspokenLang){
		_setSelected($preferencesSpokenLanguage, 0);
	}
	else {
		_setSelected(_select("prefSpokenLang"), $prefspokenLang);
	}

	if(!$prefwrittenLang){
		_setSelected($preferencesWrittenLanguage, 0);
	}
	else {
		_setSelected(_select("prefWrittenLang"), $prefwrittenLang);
	}
	
	if ($communicationPreference) {
		_click(_radio(0, _in(_label($communicationPreference))));
		$preferenceType =$communicationPreference;
	} else {
		var $rand = Math.random() * 2;
		if ($rand < 1) {
			_click($preferencesEmail);
			$preferenceType ="Email";
		}
		else {
			_click($preferencesPostal);
			$preferenceType = "Mail";
		}
	}

	_click($preferencesContinue);
	if($chekforAddress){
		_click(_radio("addressSelect", _near(_heading4("We Found[1]"))));
		_click(_submit("OK[3]"));
	}
}

function searchUserByUserName($userName){
	_setValue(_textbox("User Name"), $userName);
	_click(_submit("Go"));
}

function selectUserName($userName){
	_click(_link($userName));
}

function unlockUserAccount(){
	_uncheck(_checkbox("accountLocked"));
	_click(_submit("Save and Send"));
}

function clickAddUsers(){
	_click(_link("Users"));
	_click(_link("Add User"));
	verifyArray($userAddUserPageAccessors);
		
}

//role = "Administrator"
function enterUserInformation($role, $firstName, $lastName, $email, $phone){
	_setSelected(_select("role"), $role);
	


}

