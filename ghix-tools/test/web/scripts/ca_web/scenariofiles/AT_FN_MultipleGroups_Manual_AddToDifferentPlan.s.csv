"Comments","Tags","TestCase","Key Word","Argument 1","Argument 2"
,,,"loadSahi","../pagemodels/SoapRequest.sah"
,,,"loadSahi","../pagemodels/Esignature.sah"
,,,"loadSahi","../lib/DB.sah"
,,,"loadSahi","../pagemodels/Signup.sah"
,,,"loadSahi","../lib/Utils.sah"
,,,"loadSahi","../lib/DbDetails.sah"
,,,"loadSahi","../pagemodels/PlanSelection.sah"
"//",,,"loadSahi","household.sah"
"//",,,"loadSahi","../pagemodels/Login.sah"

,,"[Global]","[SetUp]"
,,,"maximizeWindow"
,,,"createDbObj"
,,,"$noOfAdults =","2"
,,,"$noOfChildren =","2"
,,,"$showCatastrophic =","""NO"""





"Push QEP account transfer","AccountTransfer, Type1","id=02 Account Transfer with Type1 Birth","[Documentation]","1. Account transfer with 4 member household(Financial)
2. Select Type 1 Qualifying Event as ""Marriage""(-60 days)
3. Select both Health and Dental plan
4. Enroll everyone in same plan"
,,,"setGlobalDate"
,,,"stopTestInOpenEnrollment","""Marriage"""
,,,"[Documentation]","backDate","format (""YYYY-MM-DD"" OR ""MM/DD/YYYY"")"
,,,"$eventDateForAT = getQualifyingDate","""60days""","""YYYY-MM-DD"""
,,,"$eventDate = getQualifyingDate","""60days""","""MM/DD/YYYY"""
,,,"[Documentation]","caseNumber","numOfMembers","eventDate","eventCode","isOEP","toChange",,"updatedDataObject"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer","5","4",,,,"""0:elig-7,CS4,150.25,0.00;1:elig-7,CS4;2:elig-7,CS4;3:elig-7,CS4"""
,,,"[Documentation]","AccountTransfer Case Number","Number of Member","$eventDate","isOEP","dataForAccountTransfer","eventCode","saveXmlInHousehold","newCS","numOfMemberToUpdateCS","any medicaid or cchip members",,"updatedDataObject"
,,,"$household = accountTransfer","5","4",,,,,,,,,,"$updatedDataObject"
,,,"$eventType = getEventType","""Marriage"""
,,,"[Documentation]","Event Type","Date when event was reported","Event"
,,,"$household.coverageStartDate = getCoverageStartDate","$eventType","$eventDate"
,,,"[Documentation]","Event Type","Event"
,,,"$household.coverageEndDate = getCoverageEndDate","$eventType"

"Create account and enroll in health",,,"clickLinkIndividual"
,,,"[Documentation]","Num of members from household","household","aptc","csr"
,,,"$defaultGroup=defineGroups","""group1:0,1,2,3""","$household","""group1:$150.25""","""group1:CS4"""
,,,"[Documentation]","Household information","Status on dashboard","Groups","actionButton","eventDate"
,,,"createIndividual","$household","""In Progress""","$defaultGroup","""CONFIRM EVENT AND SHOP"""
,,,"clickConfirmEventAndShop"
,,,"[Documentation]","backDate"
,,,"$eventDate = selectQualifyingDate","""60days"""
,,,"[Documentation]","Event"
,,,"selectQualifyingEvent","""Marriage"""
,,,"[Documentation]","status on Dashboard","Household information","action Button","event Date","Groups","is Health Enrollment Complete? Y/N",,"Event"
,,,"clickContinue","""In Progress""","$household","""SHOP FOR PLANS""","$eventDate","$defaultGroup",,,"""Marriage"""
,,,"[Documentation]","Household","Application Status","Application type","Household Eligibility","CSR level","Event","$eventDateForAT"
,,,"$applicationDataFromDB=verifyDBAfterAT","$household","""ER""","""QEP""","""APTC_CSR""","""CS4""","""Marriage""","$eventDateForAT"
,,,"[Documentation]","Household information","Groups","Not Enrolled Groups? (Y/N)","Enrolled Groups? (Y/N)"
,,,"clickShopForPlans","$household","$defaultGroup","""Y""","""N"""
,,,"[Documentation]","Household information"
,,,"clickShopHealthPlan","$household"
,,,"clickNextPreferences"
,,,"clickNextPreferences"
,,,"[Documentation]","isCSREnabled","aptc Amount","zipcode","coverage Date","noOfAdults","noOfChildren","showCatastrophic","ShowCSROnAllTiles","customGrouping","group"
,,,"clickViewPlans","""Y""","$defaultGroup[0].aptc","$household.people[0].homeAddress.zipcode","$household.coverageStartDate","$noOfAdults","$noOfChildren","""NO""",,"""YES""","$defaultGroup[0]"
,,,"verifyPlanFeatureFilterOnPlanPage","""Cost-Sharing Reductions (CSR)"""
,,,"$defaultGroup[0].benchmarkPremium = getBenchmarkPremiumCall","$defaultGroup[0]"
,,,"$data = calculateMonthlyBmpAmount","$defaultGroup[0]","$household","""initial"""
,,,"$household=","$data.household"
,,,"$defaultGroup[0] =","$data.group"
,,,"[Documentation]","index","custom group? (YES/NO)"
,,,"$defaultGroup[0].healthPlan = clickAddPlanFromPlanSelection",,"""YES"""
,,,"[Documentation]","Health Plan Details","Dental plan Details","coverage Date","Household information","Custom Grouping"
,,,"clickContinueToCart","$defaultGroup[0].healthPlan",,"$household.coverageStartDate","$defaultGroup[0]","""YES"""
,,,"clickNextButtonOnCart"
,,,"[Documentation]","Household information"
,,,"enterBindingArbitrationAgreement","$household"
,,,"[Documentation]","Household information","Health Plan Details","Dental plan Details","coverage Date"
,,,"clickEnroll","$defaultGroup[0]","$defaultGroup[0].healthPlan",,"$household.coverageStartDate"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N"
,,,"clickGoToDashboardFromEsig","""In Progress""","$household","""CONTINUE SHOPPING""","$eventDate","$defaultGroup","""Y"""
,,,"$defaultGroup[0].healthPlan.premiumTable = calculateMonthlyPremium","$defaultGroup[0]"
,,,"$defaultGroup[0].groupDataBeforeSep = copyObject","$defaultGroup[0]"
,,,"[Documentation]","externalCaseIdList","isPremiunDataRequired","coverageYear","isSepDataRequired","household","group"
,,,"verifyBenchmarkPremium","$household.externalHouseholdCaseId","""true""","$household.coverageYear","""true""","$household","$defaultGroup[0]"
"Enroll in dental",,,"[Documentation]","Household information","Groups","Not Enrolled Groups? (Y/N)","Enrolled Groups? (Y/N)","new Members Count","is SEP","Landing page (Health or Dental)"
,,,"clickContinueShopping","$household","$defaultGroup","""Y""","""N""",,,"""Dental"""
,,,"[Documentation]","Num of members from household","household","aptc","csr"
,,,"$dentalGroups=defineGroups","""group1:0,1,2,3""","$household","""group1:$150.25""","""group1:CS4"""
,,,"$defaultGroup[1] =","$dentalGroups[0]"
,,,"[Documentation]","isCSREnabled","aptc Amount","zipcode","coverage Date","noOfAdults","noOfChildren","showCatastrophic",,"Custom Grouping","group"
,,,"clickShopDentalPlan",,,"$household.people[0].homeAddress.zipcode","$household.coverageStartDate","2","2","""NO""",,"""YES""","$defaultGroup[1]"
,,,"[Documentation]","index","custom group? (YES/NO)"
,,,"$defaultGroup[1].dentalPlan = clickAddPlanFromPlanSelection",,"""YES"""
,,,"[Documentation]","Health Plan Details","Dental plan Details","coverage Date","Household information","Custom Grouping"
,,,"clickContinueToCart",,"$defaultGroup[1].dentalPlan","$household.coverageStartDate","$defaultGroup[1]","""YES"""
,,,"clickNextButtonOnCart"
,,,"[Documentation]","Household information","is dental enrollment (true OR false/empty)"
,,,"enterBindingArbitrationAgreement","$household","true"
,,,"[Documentation]","Household information","Health Plan Details","Dental plan Details","coverage Date"
,,,"clickEnroll","$defaultGroup[1]",,"$defaultGroup[1].dentalPlan","$household.coverageStartDate"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N","is Dental Enrollment Complete? Y/N"
,,,"clickGoToDashboardFromEsig","""Enrolled""","$household","""REPORT A CHANGE""","$eventDate","$defaultGroup","""Y""","""Y"""
,,,"[Documentation]","Groups","Household information","Start Date","End date","status of Enrollment"
,,,"clickMyEnrollments","$defaultGroup","$household","$household.coverageStartDate","$household.coverageEndDate","""Pending"""
,,,"[Documentation]","Household","SSAP Application data","Group","$healthPlan","$dentalPlan","enrollmentStatus","enrollmentType"
,,,"verifyDBAfterEnrollment","$household","$applicationDataFromDB","$defaultGroup[0]","$defaultGroup[0].healthPlan","$defaultGroup[1].dentalPlan","""Pending""","""Individual"""
"Push SEP AT with new member",,,"[Documentation]","SEP AT Add new member"
,,,"stopTestInOpenEnrollment","""MovedIntoState"""
,,,"[Documentation]","caseNumber","numOfMembers","eventDate","eventCode","isOEP","toChange",,"updatedDataObject"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer",,,,,,"""4:add member-child""",,"$updatedDataObject"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer",,,"$eventDateForAT","""MovedIntoState""",,"""0:elig-7,CS4,170.25,0.00;1:elig-7,CS4;2:elig-7,CS4;3:elig-7,CS4;4:elig-7,CS4""",,"$updatedDataObject"
,,,"[Documentation]","AccountTransfer Case Number","Number of Member","$eventDate","isOEP","dataForAccountTransfer","eventCode","saveXmlInHousehold","newCS","numOfMemberToUpdateCS","any medicaid or cchip members",,"updatedDataObject"
,,,"$SEPHousehold = accountTransfer","5","5","$eventDateForAT",,,"""MovedIntoState""",,,,,,"$updatedDataObject"
,,,"waitForDelayPopup","""Y"""
,,,"[Documentation]","externalAppId","appCount","appStatus"
,,,"waitTillApplicationStatusEN","$SEPHousehold.ATapplicationID","2","""ER"""
,,,"$eventTypeSEP = getEventType","""MovedIntoState"""
,,,"[Documentation]","Event Type","Date when event was reported","Event","isOEP"
,,,"$SEPHousehold.coverageStartDate = getCoverageStartDate","$eventTypeSEP","$eventDate"
,,,"[Documentation]","Event Type","Event"
,,,"$SEPHousehold.coverageEndDate = getCoverageEndDate","$eventTypeSEP"
,,,"$SEPHousehold.monthlyBmpAmt =","$household.monthlyBmpAmt"
,,,"$SEPHousehold.currentBmpAmt =","$household.currentBmpAmt"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N"
,,,"clickMyEnrollmentDashBoard","""In Progress""","$SEPHousehold","""FINALIZE PLANS""","$eventDate","$defaultGroup"
,,,"[Documentation]","Household","Application Status","Application type","Household Eligibility","CSR level","Event","$eventDate"
,,,"$SEPApplicationDataFromDB=verifyDBAfterAT","$SEPHousehold","""ER""","""SEP""","""APTC_CSR""","""CS4""","""MovedIntoState""","$eventDateForAT"
"Enroll new member in different plan",,,"[Documentation]","group","aptc","household"
,,,"$updatedHouseholdAndGroup=aptcDistribution","$defaultGroup[0]","$SEPHousehold.people[0].maxAPTC","$SEPHousehold"
,,,"$SEPHousehold =","$updatedHouseholdAndGroup.household"
,,,"$defaultGroup[0] =","$updatedHouseholdAndGroup.group"
,,,"[Documentation]","Household information","Groups","Not Enrolled Groups? (Y/N)","Enrolled Groups? (Y/N)","count of new members (0 if no new members)","is SEP"
,,,"clickFinalizePlans","$SEPHousehold","$defaultGroup","""N""","""Y""","1","""YES"""
,,,"[Documentation]","household","groups","memberNum","groupNum","newGroupAPTC","newGroupCSR","event date","event"
,,,"$SEPGroups=clickShopHealthPlanForNewMember","$SEPHousehold","$defaultGroup","""4""","""2""","""$""+$SEPHousehold.people[4].memberAPTC","CS4","$eventDate","""MovedIntoState"""
,,,"[Documentation]","Event Type","Date when event was reported","Event","isOEP"
,,,"$SEPGroups[2].coverageStartDate = getCoverageStartDate","$eventTypeSEP","$eventDate"
,,,"$SEPGroups[2].coverageEndDate = getCoverageEndDate","$eventTypeSEP","$eventDate"
,,,"$SEPGroups[2].member[0].isSubscriber =","true"
,,,"clickNextPreferences"
,,,"clickNextPreferences"
,,,"[Documentation]","isCSREnabled","aptc Amount","zipcode","coverage Date","noOfAdults","noOfChildren","showCatastrophic","ShowCSROnAllTiles","customGrouping","group"
,,,"clickViewPlans","""Y""","$SEPGroups[2].aptc","$SEPHousehold.people[0].homeAddress.zipcode","$SEPHousehold.coverageStartDate",,"1","""YES""",,"""YES""","$SEPGroups[2]"
,,,"verifyPlanFeatureFilterOnPlanPage","""Gold"""
,,,"$SEPGroups[2].benchmarkPremium = getBenchmarkPremiumCall","$SEPGroups[2]"
,,,"$data = calculateMonthlyBmpAmount","$SEPGroups[2]","$SEPHousehold","""addToDifferent"""
,,,"$SEPHousehold=","$data.household"
,,,"$SEPGroups[2] =","$data.group"
,,,"[Documentation]","index","custom group? (YES/NO)"
,,,"$SEPGroups[2].healthPlan = clickAddPlanFromPlanSelection",,"""YES"""
,,,"[Documentation]","Health Plan Details","Dental plan Details","coverage Date","Household information","Custom Grouping"
,,,"clickContinueToCart","$SEPGroups[2].healthPlan",,"$SEPHousehold.coverageStartDate","$SEPGroups[2]","""YES"""
,,,"clickNextButtonOnCart"
,,,"[Documentation]","Household information"
,,,"enterBindingArbitrationAgreement","$SEPHousehold"
,,,"[Documentation]","Household information","Health Plan Details","Dental plan Details","coverage Date"
,,,"clickEnroll","$SEPGroups[2]","$SEPGroups[2].healthPlan",,"$SEPHousehold.coverageStartDate"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N","is Dental Enrollment Complete? Y/N","isFromToday","verificationFlag","isSEP"
,,,"clickGoToDashboardFromEsig","""In Progress""","$SEPHousehold","""CONTINUE SHOPPING""","$eventDate","$SEPGroups","""N""",,,,"""Y"""
,,,"$SEPGroups[2].healthPlan.premiumTable = calculateMonthlyPremium","$SEPGroups[2]"
,,,"[Documentation]","externalCaseIdList","isPremiunDataRequired","coverageYear","isSepDataRequired","household","group"
,,,"verifyBenchmarkPremium","$SEPHousehold.externalHouseholdCaseId","""true""","$SEPHousehold.coverageYear","""true""","$SEPHousehold","$SEPGroups[2]"
,,,"[Documentation]","Groups","Household information","Start Date","End date","status of Enrollment","number Of Health Enrollments"
,,,"clickMyEnrollments","$SEPGroups","$SEPHousehold","$SEPHousehold.coverageStartDate","$SEPHousehold.coverageEndDate","""Pending""","2"
,,,"[Documentation]","Household","SSAP Application data","Group","$healthPlan","$dentalPlan","enrollmentStatus","enrollmentType"
,,,"verifyDBAfterEnrollment","$SEPHousehold","$SEPApplicationDataFromDB","$SEPGroups[2]","$SEPGroups[2].healthPlan","""""","""Pending""","""Individual"""
,,,"verifyEnrollmentPremiumDB","$SEPHousehold","$SEPGroups[2]"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N","verificationFlag","isDentalEnrollmentComplete","isFromToday","isSEP"
,,,"clickMyEnrollmentDashBoard","""In Progress""","$SEPHousehold","""CONTINUE SHOPPING""","$eventDate","$SEPGroups","""N""",,,,"""Y"""
"//",,,"saveHousehold","$SEPHousehold","$defaultGroup",""""""
"//",,,"Login","$SEPHousehold.people[0].email","ghix123#"

"Finalize existing enrollment",,,"[Documentation]","Household information","Groups","Not Enrolled Groups? (Y/N)","Enrolled Groups? (Y/N)","new Members Count","is SEP","landing Tab"
,,,"clickContinueShopping","$SEPHousehold","$SEPGroups","""N""","""Y""",,"""YES"""
,,,"[Documentation]","household","group","Cart Page case (""Add to plan"",""Finalize plan"" )"
,,,"$SEPGroups[0]=clickFinalizeHealthPlanOnGroupingScreen","$SEPHousehold","$SEPGroups[0]","""Finalize plan"""
,,,"clickNextButtonOnCart"
,,,"[Documentation]","Household information"
,,,"enterBindingArbitrationAgreement","$SEPHousehold"
,,,"[Documentation]","Household information","Health Plan Details","Dental plan Details","coverage Date"
,,,"clickEnroll","$SEPGroups[0]","$SEPGroups[0].healthPlan",,"$SEPHousehold.coverageStartDate"
,,,"[Documentation]","Status","Household information","Action button","event Date","Groups","is Health Enrollment Complete? Y/N","is Dental Enrollment Complete? ""Y"" or empty"
,,,"clickGoToDashboardFromEsig","""Enrolled""","$SEPHousehold","""CONTINUE SHOPPING""","$eventDate","$SEPGroups","""Y""","""Y"""
,,,"$SEPGroups[0].healthPlan.premiumTable = calculateMonthlyPremium","$SEPGroups[0]"
,,,"$SEPGroups[0].coverageChangeEffectiveDate=getCoverageStartDate","3"
,,,"[Documentation]","Groups","Household information","Start Date","End date","status of Enrollment","number Of Health Enrollments"
,,,"clickMyEnrollments","$SEPGroups","$SEPHousehold","$SEPHousehold.coverageStartDate","$SEPHousehold.coverageEndDate","""Pending""","2"
,,,"[Documentation]","Household","SSAP Application data","Groups","$healthPlan","$dentalPlan","enrollmentStatus","enrollmentType"
,,,"verifyDBAfterEnrollment","$SEPHousehold","$SEPApplicationDataFromDB","$SEPGroups[0]","$SEPGroups[0].healthPlan","""""","""Pending""","""Individual"""
,,,"verifyEnrollmentPremiumDB","$SEPHousehold","$SEPGroups[0]"
,,,"[Documentation]","externalCaseIdList","isPremiunDataRequired","coverageYear","isSepDataRequired","household","group"
,,,"verifyBenchmarkPremium","$SEPHousehold.externalHouseholdCaseId","""true""","$SEPHousehold.coverageYear","""true""","$SEPHousehold","$SEPGroups[0]"