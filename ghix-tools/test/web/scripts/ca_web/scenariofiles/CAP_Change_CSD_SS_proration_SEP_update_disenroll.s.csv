"Comments","Tags","TestCase","Key Word","Argument 1","Argument 2","Column 07","Column 08","Column 09","Column 10","Column 11","Column 12","Column 13","Column 14","Column 15","Column 16"
,,,"loadSahi","../pagemodels/SoapRequest.sah"
,,,"loadSahi","../pagemodels/Esignature.sah"
,,,"loadSahi","../lib/DB.sah"
,,,"loadSahi","../pagemodels/Signup.sah"
,,,"loadSahi","../pagemodels/AT_functions.sah"
,,,"loadSahi","../pagemodels/cap_memberView.sah"
,,,"loadSahi","../pagemodels/cap_Applications.sah"
,,,"loadSahi","../pagemodels/cap_PremiumHistory.sah"
,,,"loadSahi","../lib/Utils.sah"
,,,"loadSahi","../lib/DbDetails.sah"
,,,"loadSahi","../pagemodels/PlanSelection.sah"
"//",,,"loadSahi","household.sah"
,,,"loadSahi","../pagemodels/Login.sah"

,,"[Global]","[SetUp]"
,,,"maximizeWindow"
,,,"createDbObj"
,,,"$noOfAdults =","2"
,,,"$noOfChildren =","2"
,,,"$showCatastrophic =","""NO"""
,,,"$capSupervisor =","""auto_supervisor_34@yopmail.com"""
,,,"$capRole =","""SUPERVISOR"""
,,,"$isOEP =","""NO"""


"Push account transfer and 
create individual","AccountTransfer, Type1","id=34 Account Transfer","[Documentation]","1. As CSR change coverage start date to the middle
of the month
2. Enrolled in health and verify prorated SS
3. SEP SS update 
4. Disenroll with type 1 and verify prorated SS"
,,,"[Documentation]","username","role"
,,,"createCsrUserIfNotExist","$capSupervisor","$capRole"
,,,"$scenarioGlobalDate =","""02-01-2020"""
,,,"setGlobalDate","$scenarioGlobalDate"
,,,"[Documentation]","backDate","format (""YYYY-MM-DD"" OR ""MM/DD/YYYY"")"
,,,"$eventDate = getQualifyingDate","""currentDate""","""MM/DD/YYYY"""
,,,"$eventDateForAT = getQualifyingDate","""currentDate""","""YYYY-MM-DD"""
"//",,,"stopTestsIfOEClosed"
,,,"[Documentation]","all members QHP APTC SPTC"
,,,"[Documentation]","caseNumber","numOfMembers","eventDate","eventCode","isOEP","toChange"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer","5","4","$eventDateForAT","""Marriage""","$isOEP","""0:elig-3,CS1,0.00,90.25;1:elig-3,CS1;2:elig-3,CS1;3:elig-3,CS1"""
,,,"[Documentation]","AccountTransfer Case Number","Number of Member","$eventDate","eventCode","isOEP","updatedDataObject","is need dental"
,,,"$household = pushAccountTransferAndCreateIndividual","5","4","$eventDateForAT","""Marriage""","$isOEP","$updatedDataObject"
,,,"$applicationDataDB=getSSAPApplicationDataAfterAT","$household","""ER""","""QEP""","""APTC""","""null"""
,,,"logOut"
"Login as exadmin and search 
for individual to get CAP URL",,,"[Documentation]","username","password","$household"
,,,"$capURL=loginAsExadminAndSearchForIndividual",,,"$household"
,,,"logOut"
,,,"[Documentation]","username","option","date"
"//",,,"timeshiftAccount","$capSupervisor","""delete""","$globalDate"
"//",,,"timeshiftAccount","$capSupervisor","""add""","$globalDate"
"Login as supervisor and 
change coverage start date
to middle of the month",,,"[Documentation]","username","password","$household","URL","$role"
,,,"loginAsCapAdmin","$capSupervisor","""ghix123""","$household","$capURL","""supervisor"""
,,,"clickApplicationsLinkCap"
,,,"verifyActionsOnApplicationsBasedOnRole","$household","""supervisor""","$applicationDataDB.ssapApplicationData.CASE_NUMBER","""ER""","""QEP"""
,,,"[Documentation]","household","new date","Case Number","personToUpdateCovDt"
,,,"$household = changeCoverageStartDate","$household","""midMonth""","$applicationDataDB.ssapApplicationData.CASE_NUMBER","""all"""
"As supervisor impersonate
individual and enroll in 
health",,,"[Documentation]","household"
,,,"capViewMemberAccount","$household"
,,,"[Documentation]","Num of members from household","household","aptc","csr","state subsidy"
,,,"$defaultGroup=defineGroups","""group1:0,1,2,3""","$household","""group1:null""","""group1:null""","""group1:$90.25"""
,,,"[Documentation]","groups","group to enroll"
,,,"$defaultGroup=enrollGroupInHealth","$defaultGroup","""0"""
"Return back to CAP
portal and verify prorated SS",,,"[Documentation]"
,,,"returnToCapFromMemberPortal"
,,,"[Documentation]","household","status","Role","Groups"
,,,"clickEnrollmentsfromLeftNavigation","$household","""PENDING""","""supervisor""","$defaultGroup"
,,,"[Documentation]","$household","group","Role"
,,,"clickShowPremiumHistory","$household","$defaultGroup[0]","""supervisor"""
"Push SEP with SS
update and verify that new SS
 applied from correct
effective date",,,"[Documentation]","SEP AT"
,,,"[Documentation]","caseNumber","numOfMembers","eventDate","eventCode","isOEP","toChange",,"updatedDataObject"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer",,,"$eventDateForAT","""OtherEligibilityChange""","$isOEP","""0:elig-3,CS1,0.00,110.25;1:elig-3,CS1;2:elig-3,CS1;3:elig-3,CS1""",,"$updatedDataObject"
,,,"[Documentation]","AccountTransfer Case Number","Number of Member","$eventDate","isOEP","dataForAccountTransfer","eventCode","saveXmlInHousehold","newCS","numOfMemberToUpdateCS","any medicaid or cchip members",,"updatedDataObject"
,,,"$SEPHousehold = accountTransfer","5","4","$eventDateForAT","$isOEP",,"""OtherEligibilityChange""",,,,,,"$updatedDataObject"
,,,"[Documentation]","externalAppId","appCount","appStatus"
,,,"waitTillApplicationStatusEN","$SEPHousehold.ATapplicationID","2","""EN"""
,,,"$SEPHousehold.coverageStartDate =","$household.coverageStartDate"
,,,"[Documentation]","Event Type","Event","isOEP"
,,,"$SEPHousehold.coverageEndDate = getCoverageEndDate","3","""OtherEligibilityChange""","$isOEP"
,,,"[Documentation]","Event Type","Date when event was reported","Event","isOEP"
,,,"$defaultGroup[0].coverageChangeEffectiveDate=getCoverageStartDate","3","$eventDate","""OtherEligibilityChange"""
,,,"[Documentation]","household","groups","groupNum"
,,,"$sepDefaultGroup=recalculatePremium","$SEPHousehold","$defaultGroup","""0"""
,,,"$sepDefaultGroup[0].healthPlan.premiumTable=calculateMonthlyPremium","$sepDefaultGroup[0]"
,,,"[Documentation]","household","status","Role","Groups"
,,,"clickEnrollmentsfromLeftNavigation","$SEPHousehold","""PENDING""","""supervisor""","$sepDefaultGroup"
,,,"[Documentation]","$household","group","Role"
,,,"clickShowPremiumHistory","$SEPHousehold","$sepDefaultGroup[0]","""supervisor"""
"Push SEP to disenroll all members
with type 1 event and verify
prorated SS",,,"[Documentation]","SEP AT disenroll type 1"
,,,"[Documentation]","caseNumber","numOfMembers","eventDate","eventCode","isOEP","toChange",,"updatedDataObject"
,,,"$updatedDataObject=changeXmlBeforAccountTransfer",,,"$eventDateForAT","""NonQHP:Death""","$isOEP","""0:elig-11,CS1,0.00,0.00;1:elig-11,CS1;2:elig-11,CS1;3:elig-11,CS1""",,"$updatedDataObject"
,,,"[Documentation]","AccountTransfer Case Number","Number of Member","$eventDate","isOEP","dataForAccountTransfer","eventCode","saveXmlInHousehold","newCS","numOfMemberToUpdateCS","any medicaid or cchip members",,"updatedDataObject"
,,,"$SEPHousehold = accountTransfer","5","4","$eventDateForAT","$isOEP",,"""NonQHP:Death""",,,,,,"$updatedDataObject"
,,,"[Documentation]","externalAppId","appCount","appStatus"
,,,"waitTillApplicationStatusEN","$SEPHousehold.ATapplicationID","3","""EN"""
,,,"[Documentation]","Event Type","Event","isOEP"
,,,"$SEPHousehold.coverageEndDate = getCoverageEndDate","1","""Death""","$isOEP","$eventDate"
,,,"$defaultGroup[0].coverageEndDate =","$SEPHousehold.coverageEndDate"
,,,"[Documentation]","Household","Group","Insurance type ('Health' or 'Dental')","num of members to remove","Event","Event Date","new aptc amount (optional)"
,,,"$defaultGroup[0]=updateGroupAndPlanInfoAfterAutoRemove","$SEPHousehold","$defaultGroup[0]","""Health""","""0,1,2,3""","""Death""","$eventDate"
,,,"[Documentation]","Event Type","Event","isOEP"
,,,"$defaultGroup[0].coverageChangeEffectiveDate=getCoverageEndDate","1","""Death""","$isOEP","$eventDate"
,,,"[Documentation]","group","case"
,,,"$defaultGroup[0].healthPlan.premiumTable=calculateMonthlyPremium","$defaultGroup[0]","""disenroll"""
"//",,,"saveHousehold","$SEPHousehold","$defaultGroup"
,,,"[Documentation]","household","status","Role","Groups"
,,,"clickEnrollmentsfromLeftNavigation","$SEPHousehold","""TERM""","""supervisor""","$defaultGroup"
,,,"[Documentation]","$household","group","Role"
,,,"clickShowPremiumHistory","$SEPHousehold","$defaultGroup[0]","""supervisor"""