_includeOnce("Indportal.sah");
_includeOnce("Utils.sah");
_includeOnce("CAP.sah");
_includeOnce("../lib/DB.sah");

var $AccountSettings = true;
var $PasswordHeader = _heading4("Password");
var $ChangePassword = _link("pwdChange");
var $PasswordLabel = _dTerm("Password");
var $PasswordAccessors = [$PasswordHeader, $ChangePassword, $PasswordLabel];
var $SecurityQuestionHeader = _heading4("Security Question");
var $ChangeSecurityQuestion = _link("Change Your Security Question");
var $SecurityQuestionLabel = _dTerm("Security Question");
var $SecurityAnswerLabel = _dTerm("Answer");
var $SecurityQuestionAccessors = [$SecurityQuestionHeader, $ChangeSecurityQuestion, $SecurityQuestionLabel, $SecurityAnswerLabel];
var $EmailAddressHeader = _heading4("Email Address");
var $ChangeEmailAddress = _link("Change Your Email Address");
var $EmailAddressLabel = _dTerm("Email Address");
var $EmailAddressAccessors = [$EmailAddressHeader, $ChangeEmailAddress, $EmailAddressLabel];
var $ChangePasswordHeader = _heading3("password-modal");
var $CurrentPasswordLabel = _label("/Current Password/");
var $CurrentPassword = _password("currentpswd");
var $NewPasswordLabel = _label("/New Password/");
var $NewPassword = _password("newpassword");
var $ConfirmNewPasswordLabel = _label("/Confirm New Password/");
var $ConfirmNewPassword = _password("confirmpassword");
var $ChangePasswordCancel =_submit("cancelbutton1");
var $ChangePasswordSave = _button("changePwdSave");
var $ChangePasswordAccessors = [$ChangePasswordHeader, $CurrentPasswordLabel, $CurrentPassword, $NewPasswordLabel,
								$NewPassword, $ConfirmNewPasswordLabel, $ConfirmNewPassword, $ChangePasswordCancel,
								$ChangePasswordSave];
var $ChangeSecurityQuestionHeader = _heading3("questions-modal");
var $ChangeSecurityQuestionInstructions = _paragraph("This question adds an extra layer of security to your account. We may ask you to provide an answer to this question to verify your security in certain specific situations.");
var $CurrentPasswordNotMatchedMsg=_span("!The current password doesn't match with our records.");
var $ChangeSecurityQuestionCurrentPassword=_label("Current Password Required", _in(_div("change-questions")));
var $ChangeSecurityQuestionSecurityQuestionLabel = _heading4("Security Question");
var $ChangeSecurityQuestionSecurityQuestion = _select("securityQuestion1");
var $ChangeSecurityQuestionSecurityAnswerLabel = _label("Answer");
var $ChangeSecurityQuestionSecurityAnswer = _password("securityAnswer1");
var $ChangeSecurityQuestionCancel =_submit("Cancel", _in(_div("change-questions")));
var $ChangeSecurityQuestionSave = _button("Save", _in(_div("change-questions")));
var $ChangeSecurityQuestionAccessors = [$ChangeSecurityQuestionHeader, $ChangeSecurityQuestionInstructions,$ChangeSecurityQuestionCurrentPassword,
										$ChangeSecurityQuestionSecurityQuestionLabel, $ChangeSecurityQuestionSecurityQuestion,
										$ChangeSecurityQuestionSecurityAnswerLabel, $ChangeSecurityQuestionSecurityAnswer,
										$ChangeSecurityQuestionCancel, $ChangeSecurityQuestionSave];
										

//Issuers accessors
var $issuersHeadingCap = _heading1("/Issuers/");
var $issuerNameTextboxCap = _textbox("issuerName");
var $issuerStatusSelectCap = _select("status");
var $goButtonIssuerCap = _submit("Go");
var $issuerRepLinkCap = _link("Issuer Representative");
var $issuerRepHeadingCap =_heading4("Issuer Representative");
var $addEnrollmentRepLinkCap = _link("Add Enrollment Representative");
var $addEnrollmentRepHeadingCap = _heading4("Add Enrollment Representative");
var $enrollRepfirstNameTextbox = _textbox("firstName");
var $enrollRepLastNameTextbox = _textbox("lastName");
var $enrollRepEmailTextbox = _textbox("email");
var $invalidFirstNameErrorMsgCap = _span("!Please enter valid first name.");
var $invalidLastNameErrorMsgCap = _span("!Please enter valid last name.");
var $invalidEmailErrorMsgCap = _span("Please enter valid Email Address");
var $enrollRepTitleTextbox =_textbox("title");
var $enrollRepPhone1Textbox =_textbox("phone1");
var $enrollRepPhone2Textbox =_textbox("phone2");
var $enrollRepPhone3Textbox =_textbox("phone3");
var $enrollRepSaveBtn = _submit("Save");
var $registrationStatusOkBtn = _button("Ok");
var $addRepLinkCap = _link("Add Representative");
var $addRepHeadingCap = _heading4("Add Representative");

function verifyElementsOnAccountSettingPage() {
	verifyArray($PasswordAccessors);
	verifyArray($SecurityQuestionAccessors);
	verifyArray($EmailAddressAccessors);
}

function clickChangePassword($old, $new) {
	_click($ChangePassword);
	verifyArray($ChangePasswordAccessors);
	_setValue($CurrentPassword, $old);
	_setValue($NewPassword, $new);
	_setValue($ConfirmNewPassword, $new);
	_click($ChangePasswordSave);
}

function clickChangeSecurityQuestion($questionIndex, $answer) {
	$questionIndex="2";
	_click($ChangeSecurityQuestion);
	$signupSecurityQuestion = _getValue(_select("securityQuestion1"));
	_wait(3000);
	verifyArray($ChangeSecurityQuestionAccessors);
	_setValue(_password("currentpswdans"), "test");
	_click($ChangeSecurityQuestionSave);
	_assertVisible($CurrentPasswordNotMatchedMsg);
	_setValue(_password("currentpswdans"), $signUpPassword);
	_setSelected($signupSecurityQuestionMenu, $questionIndex);
	if($answer==null || $answer==""){
		$answer="securityanswer";
	}
	_setValue(_password("securityAnswer1"), $answer);
	_click($ChangeSecurityQuestionSave);
	_assertNotEqual($signupSecurityQuestion, _getText(_dDesc(1)));
}

function clickAccountSettingsGotoDashboard(){
	_click(_link("My Account Dropdown Menu. Press enter to open it and tab through its options"));
	_click(_link("Dashboard"));
	if(_isVisible((_list("nav nav-tabs multi-year-tab")))){
		var $now= _call(window.moment()).format("MM/DD/YYYY");
		var $currentDay = parseInt(_fetch(window.moment($now).get('date')));
		var $currentMonth =  parseInt(_fetch(window.moment($now).get('month')))+1;
		var $year="";
		if($currentMonth == 11){
			if($currentDay > 15){
				$year = parseInt(_fetch(window.moment($now).get('year')))+1;
			}
			else {
				$year = parseInt(_fetch(window.moment($now).get('year')));
			}
		}
		else {
			$year = parseInt(_fetch(window.moment($now).get('year')));
		}
		selectApplicationYear($year);
	}
}

function IndividualChangeSecurityQuestions(){
	clickLogin();
	loginEnterEmailAddress($signupEmail);
	_maskLogs("Sensitive Data");
	loginEnterPassword("ghix123#");
	_unmaskLogs("Information end");
	loginClickLoginButton();
	_click(_link("My Account Settings"));
	_assertVisible(_heading4("Password"));
	_assertVisible(_heading4("Security Question"));
	_assertVisible(_heading4("Email Address"));

	clickChangeSecurityQuestion();
	_click(_link("My Account Dropdown Menu. Press enter to open it and tab through its options"));
	_click(_link("Logout End of dropdown", _in(_listItem("My Account Dropdown Menu. Press enter to open it and tab through its options Account Settings Dashboard Logout End of dropdown"))));
}

function IndividualChangePassword($old,$new){
	clickLogin();
	loginEnterEmailAddress($signupEmail);
	_maskLogs("Sensitive Data");
	loginEnterPassword($signUpPassword);
	_unmaskLogs("Information end");
	loginClickLoginButton();
	_click(_link("My Account Settings"));
	_assertVisible(_heading4("Password"));
	_assertVisible(_heading4("Security Question"));
	_assertVisible(_heading4("Email Address"));
	clickChangePassword($old, $new);
	$signUpPassword=$new;
	_click(_link("My Account Dropdown Menu. Press enter to open it and tab through its options"));
	_click(_link("Logout End of dropdown", _in(_listItem("My Account Dropdown Menu. Press enter to open it and tab through its options Account Settings Dashboard Logout End of dropdown"))));
	loginEnterEmailAddress($signupEmail);
	loginEnterPassword($signUpPassword);
	loginClickLoginButton();
	_click(_link("My Account Dropdown Menu. Press enter to open it and tab through its options"));
	_click(_link("Logout End of dropdown", _in(_listItem("My Account Dropdown Menu. Press enter to open it and tab through its options Account Settings Dashboard Logout End of dropdown"))));
}

//Issuers 
function clickIssuersLinkCap(){
	_click($issuersMenuLink);
	_assertVisible($manageIssuerAccountsSubMenuLink, "Verify that Manage Issuer Accounts sub menu is displayed");
}

function clickManageIssuerAccountsLinkCap(){
	_click($manageIssuerAccountsSubMenuLink);
	_assertVisible($issuersHeadingCap,"Verify Issuers heading is displayed");
}

function searchIssuerCap($issuerStatus){
	_setSelected($issuerStatusSelectCap, $issuerStatus);
	_click($goButtonIssuerCap);
	_assertVisible(_cell($issuerStatus, _in(_row(1))),"Verify issuer status is displayed");
	var $issuerName=_getText(_cell(0, _leftOf(_cell($issuerStatus))));
	_click(_link("/"+$issuerName+"/"));
	_assertVisible(_heading1("/"+$issuerName+"/"),"Verify issuer name is displayed as heading");
	return $issuerName;
}

function clickIssuerRepresentativeLinkCap($issuerName){
	_click($issuerRepLinkCap);
	_assertVisible(_heading1($issuerName),"Verify issuer name heading is displayed");
	_assertVisible($issuerRepHeadingCap,"Verify Issuer Representative heading is displayed");
}

function clickaddEnrollmentRepLinkCap(){
	_click($addEnrollmentRepLinkCap);
	_assertVisible($addEnrollmentRepHeadingCap,"Verify Add Enrollment Representative heading is displayed");
}

function clickAddRepCap(){
	_click($addRepLinkCap);
	_assertVisible($addRepHeadingCap,"Verify Add Representative heading is displayed");
}

function addIssuerRepCap($firstName,$lastName,$title,$phoneNum,$issuerName,$role,$isInvalid){
	// Check role
	if($role=="ISSUER_ENROLLMENT_REPRESENTATIVE"){
		clickIssuerRepresentativeLinkCap($issuerName);
		clickaddEnrollmentRepLinkCap();
		
	}
	else if ($role=="ISSUER_REPRESENTATIVE"){
		clickIssuerRepresentativeLinkCap($issuerName);
		clickAddRepCap();
	}
	addRepresentativeCap($firstName,$lastName,$title,$phoneNum,$issuerName,$role,$isInvalid);
}

function addRepresentativeCap($firstName,$lastName,$title,$phoneNum,$issuerName,$role,$isInvalid){
	var $currentTime = new Date().getTime();
	_setValue($enrollRepfirstNameTextbox, $firstName);
	_assertNotVisible($invalidFirstNameErrorMsgCap,"Verfiy Please enter valid first name message is not displayed");
	_setValue($enrollRepLastNameTextbox, $lastName);
	_assertNotVisible($invalidLastNameErrorMsgCap,"Verfiy Please enter valid last name message is not displayed");
	_setValue($enrollRepTitleTextbox, $title);
	_setValue($enrollRepPhone1Textbox, $phoneNum.substring(0,3));
	_setValue($enrollRepPhone2Textbox, $phoneNum.substring(3,6));
	_setValue($enrollRepPhone3Textbox, $phoneNum.substring(6));	
	$email = $lastName+"_"+$currentTime+"@yopmail.com";
	_setValue($enrollRepEmailTextbox, $email);
	_assertNotVisible($invalidEmailErrorMsgCap,"Verfiy Please enter valid Email Address is not displayed");
	_click($enrollRepSaveBtn);
	$email = $email.toLowerCase();
	_assertVisible(_paragraph("Activation link sent to "+$email),"Verify Activation link sent message");
	_click($registrationStatusOkBtn);
	_assertVisible(_link($firstName+" "+$lastName, _in(_row(1))),"Verify that new representative created is displayed under Issuer Representative");
	verifyDbIssuerRepDetails($firstName,$lastName,$title,$phoneNum,$email,$role);
}

function verifyDbIssuerRepDetails($firstName,$lastName,$title,$phoneNum,$email,$role){
	var $issuerRepDetailsDb = getIssuerRepDetailsFromIssuerRepresentative($email);
	_assertEqual($firstName,$issuerRepDetailsDb [0]["first_name"],"Verify if first name entered in UI is same as in DB");	
	_assertEqual($lastName,$issuerRepDetailsDb [0]["last_name"],"Verify if last name entered in UI is same as in DB");	
	_assertEqual($title,$issuerRepDetailsDb [0]["title"],"Verify if title entered in UI is same as in DB");	
	_assertEqual($phoneNum,$issuerRepDetailsDb [0]["phone"],"Verify if phone number entered in UI is same as in DB");	
	_assertEqual($email,$issuerRepDetailsDb [0]["email"],"Verify if email entered in UI is same as in DB");	
	_assertEqual($role,$issuerRepDetailsDb [0]["role"],"Verify role in DB");	
}